name: Provision EKS

on:
  workflow_dispatch:
  push:
    branches:
      - main  # or the branch you want to trigger the workflow from

jobs:
  Deploy-plan:
    name: "Terraform Plan & Apply"
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    env:
      AWS_REGION: "ap-south-1"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          audience: sts.amazonaws.com
          aws-region: ${{ env.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7

      - name: Run Terraform initialize
        #working-directory: ./terraform
        run: terraform init --backend-config="vars/test/test.backend.tfvars"

      - name: Terraform Format
        working-directory: terraform
        run: terraform fmt --recursive

      - name: Terraform Validate
        working-directory: terraform
        run: terraform validate

      - name: Run Terraform pan
        #working-directory: ./terraform
        run: terraform plan --var-file="vars/test/test.tfvars" -out=plan-test-${{ github.sha }}.out

      - name: Publish TF plan artifact 
        uses: actions/upload-artifact@v4
        with:
          name: plan-test-${{ github.sha }}.out
          path: plan-test-${{ github.sha }}.out
          if-no-files-found: error

  Deploy-approval:
    needs:
      - Deploy-plan
    if: github.ref != 'refs/heads/fix'
    runs-on: ubuntu-20.04
    environment: approval
    steps:
      - name: Approval gate for deploy
        run: |
          echo "Wating for approval"

  Deploy:
    runs-on: ubuntu-latest
    needs: [Deploy-approval]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1  # specify your desired region

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7

      - name: Run Terraform initialize
        #working-directory: ./terraform
        run: terraform init --backend-config="vars/test/test.backend.tfvars"

      - name: Download plan out
        uses: actions/download-artifact@v3
        with:
          name: plan-test-${{ github.sha }}.out 

      #- name: Copy Plan
      #  run: |
      #    cp plan-test-${{ github.sha }}.out terraform/

      #- name: Terraform Apply - Dev
      #  run: |
      #    terraform apply -auto-approve -input=false -var-file="vars/test/test.tfvars"
      #  working-directory: terraform/
